SET SERVEROUTPUT ON;
--CREATE SEQUENCE ID_SEQ START WITH 1;
CREATE OR REPLACE PROCEDURE ADD_EMPLOYEE (PFNAME EMPLOYEE.FIRST_NAME%TYPE, PLNAME EMPLOYEE.LAST_NAME%TYPE, PEMAIL EMPLOYEE.EMAIL%TYPE,PHDATE EMPLOYEE.HIRE_DATE%TYPE, PJID 	EMPLOYEE.JOB_ID%TYPE, PBDATE EMPLOYEE.BIRTH_DATE%TYPE, PMSTATUS EMPLOYEE.MARITAL_STATUS%TYPE, 	PGENDER EMPLOYEE.GENDER%TYPE, PDID EMPLOYEE.DEPARTMENT_ID%TYPE, PEID EMPLOYEE.EMPLOYEE_ID%TYPE,PPNO CONTACT.PHONE_NO%TYPE, PPASSWORD EMPLOYEE.PASSWORD%TYPE)
 IS

VMID EMPLOYEE.MANAGER_ID%TYPE;
VSALARY EMPLOYEE.SALARY%TYPE;
VBALANCE EMPLOYEE.SALARY%TYPE;

BEGIN

IF GLOBAL.MY_VAR!=ADMIN.MY_VAR THEN 
 RAISE_APPLICATION_ERROR(-20000,'YOU DONOT HAVE ACCESS TO THE DATA');
END IF;

SELECT BASE_SALARY INTO VSALARY FROM JOBS WHERE JOB_ID = PJID;
SELECT MANAGER_ID INTO VMID FROM DEPARTMENTS WHERE DEPARTMENT_ID=PDID;

INSERT INTO CONTACT(EMAIL,PHONE_NO) VALUES (PEMAIL,PPNO);


INSERT INTO EMPLOYEE(FIRST_NAME,LAST_NAME,EMAIL,HIRE_DATE,JOB_ID,BIRTH_DATE,SALARY,MARITAL_STATUS,GENDER,DEPARTMENT_ID,MANAGER_ID,EMPLOYEE_ID,PASSWORD) VALUES(PFNAME,PLNAME,PEMAIL,PHDATE,PJID,PBDATE,VSALARY,PMSTATUS,PGENDER,PDID,VMID,PEID,PPASSWORD);

--VBALANCE := MONTHS_BETWEEN(TO_DATE(SYSDATE,'MM-DD-YYYY') , TO_DATE(PHDATE,'MM-DD-YYYY') )*VSALARY;
--VBALANCE := MONTHS_BETWEEN(SYSDATE , PHDATE ) *VSALARY;

INSERT INTO ACCOUNT(EMPLOYEE_ID,SALARY,PASSWORD,HIRE_DATE,BALANCE,LAST_UPDATE) VALUES ( PEID,VSALARY,PPASSWORD,PHDATE,0,PHDATE ) ;
COMMIT;



END ADD_EMPLOYEE;
/
SHOW ERRORS

 
 --EXECUTE ADD_EMPLOYEE('NIEB','NEOM','NIEBEOM0@GMAIL.COM','11-NOV-17',4,'02-JUL-96','UNMARRIED','MALE',1,1,0177,'PASS');

CREATE OR REPLACE PROCEDURE EMPLOYEE_LOGIN(PEID EMPLOYEE.EMPLOYEE_ID%TYPE,PPASSWORD EMPLOYEE.PASSWORD%TYPE) IS

V_BALANCE ACCOUNT.BALANCE%TYPE;
V_FNAME EMPLOYEE.FIRST_NAME%TYPE;
V_LNAME EMPLOYEE.LAST_NAME%TYPE;
V_EMAIL EMPLOYEE.EMAIL%TYPE;
V_JID 	EMPLOYEE.JOB_ID%TYPE;
V_MSTATUS EMPLOYEE.MARITAL_STATUS%TYPE;

V_DID EMPLOYEE.DEPARTMENT_ID%TYPE;
V_PNO CONTACT.PHONE_NO%TYPE;
V_SALARY EMPLOYEE.SALARY%TYPE;
V_DNAME DEPARTMENTS.DEPARTMENT_NAME%TYPE;
V_JTITLE JOBS.JOB_TITLE%TYPE;


BEGIN

IF GLOBAL.MY_VAR!=ADMIN.MY_VAR THEN 
 RAISE_APPLICATION_ERROR(-20000,'YOU DONOT HAVE ACCESS TO THE DATA');
END IF;

SELECT E.FIRST_NAME,E.LAST_NAME,E.EMAIL,E.JOB_ID,E.MARITAL_STATUS,E.DEPARTMENT_ID,(A.BALANCE-A.WITHDRAW) INTO V_FNAME,V_LNAME,V_EMAIL,V_JID,V_MSTATUS,V_DID,V_BALANCE FROM EMPLOYEE E JOIN ACCOUNT A ON E.EMPLOYEE_ID = A.EMPLOYEE_ID WHERE E.EMPLOYEE_ID = PEID AND E.PASSWORD= PPASSWORD;

IF V_BALANCE = NULL THEN RAISE_APPLICATION_ERROR(-20000,'YOU DONOT HAVE ACCESS TO THE DATA');
ELSE
SELECT SALARY INTO V_SALARY FROM ACCOUNT WHERE EMPLOYEE_ID = PEID;
SELECT JOB_TITLE INTO V_JTITLE FROM JOBS WHERE JOB_ID = V_JID;
SELECT DEPARTMENT_NAME INTO V_DNAME FROM DEPARTMENTS WHERE DEPARTMENT_ID = V_DID;

DBMS_OUTPUT.PUT_LINE('NAME: ' || V_FNAME || ' ' || V_LNAME || CHR(10) || 'EMAIL :' || V_EMAIL || CHR(10) || 'JOB TITLE : ' || V_JTITLE || CHR(10) ||  'MARITAL STATUS: ' || V_MSTATUS || CHR(10) || 'DEPARTMENT NAME: ' || V_DNAME ||CHR(10) ||   'SALARY: ' || V_SALARY || CHR(10) || 'BALANCE : ' || V_BALANCE || CHR(10) );

END IF;

END EMPLOYEE_LOGIN;
/
SHOW ERRORS;

 
CREATE OR REPLACE PROCEDURE BONUS (AMOUNT ACCOUNT.BALANCE%TYPE) IS 

BEGIN
IF GLOBAL.MY_VAR!=ADMIN.MY_VAR THEN 
 RAISE_APPLICATION_ERROR(-20000,'YOU DONOT HAVE ACCESS TO THE DATA');
END IF;

UPDATE  ACCOUNT SET BALANCE = BALANCE + AMOUNT ;
UPDATE ACCOUNT SET BONUS = BONUS+AMOUNT;

END;
/
SHOW ERRORS;

--EXECUTE BONUS(12000);



CREATE OR REPLACE PROCEDURE MALE_EM IS

CURSOR EMP_CUR IS SELECT FIRST_NAME,LAST_NAME,EMAIL,JOB_ID,SALARY,MARITAL_STATUS,GENDER,DEPARTMENT_ID,EMPLOYEE_ID FROM EMPLOYEE MINUS SELECT FIRST_NAME,LAST_NAME,EMAIL,JOB_ID,SALARY,MARITAL_STATUS,GENDER,DEPARTMENT_ID,EMPLOYEE_ID FROM EMPLOYEE WHERE EMPLOYEE.GENDER='FEMALE';

EMP_REC EMP_CUR%ROWTYPE;


BEGIN
IF GLOBAL.MY_VAR!=ADMIN.MY_VAR THEN 
 RAISE_APPLICATION_ERROR(-20000,'YOU DONOT HAVE ACCESS TO THE DATA');
END IF;


FOR EMP_REC IN EMP_CUR
      LOOP      
      
      DBMS_OUTPUT.PUT_LINE ('NAME :' || EMP_REC.FIRST_NAME || '  ' || EMP_REC.LAST_NAME || CHR(10) || 'EMAIL : ' || EMP_REC.EMAIL || CHR(10) || 'SALARY : ' || EMP_REC.SALARY || CHR(10) || 'MARITAL STATUS :' || EMP_REC.MARITAL_STATUS ||CHR(10) ||  'EMPLOYEE ID :' || EMP_REC.EMPLOYEE_ID);

      END LOOP;
       

END MALE_EM;
/
SHOW ERRORS;



CREATE OR REPLACE PROCEDURE FEMALE_EM IS

CURSOR EMP_CUR IS SELECT FIRST_NAME,LAST_NAME,EMAIL,JOB_ID,SALARY,MARITAL_STATUS,GENDER,DEPARTMENT_ID,EMPLOYEE_ID FROM EMPLOYEE MINUS SELECT FIRST_NAME,LAST_NAME,EMAIL,JOB_ID,SALARY,MARITAL_STATUS,GENDER,DEPARTMENT_ID,EMPLOYEE_ID FROM EMPLOYEE WHERE EMPLOYEE.GENDER='MALE';

EMP_REC EMP_CUR%ROWTYPE;


BEGIN
IF GLOBAL.MY_VAR!=ADMIN.MY_VAR THEN 
 RAISE_APPLICATION_ERROR(-20000,'YOU DONOT HAVE ACCESS TO THE DATA');
END IF;

FOR EMP_REC IN EMP_CUR
      LOOP
              
      DBMS_OUTPUT.PUT_LINE ('NAME :' || EMP_REC.FIRST_NAME || '  ' || EMP_REC.LAST_NAME || CHR(10) || 'EMAIL : ' || EMP_REC.EMAIL || CHR(10) || 'SALARY : ' || EMP_REC.SALARY || CHR(10) || 'MARITAL STATUS :' || EMP_REC.MARITAL_STATUS ||CHR(10) ||  'EMPLOYEE ID :' || EMP_REC.EMPLOYEE_ID);

      END LOOP;
       

END FEMALE_EM;
/
SHOW ERRORS;


CREATE OR REPLACE PROCEDURE UPDATE_ACCOUNT IS

BEGIN
IF GLOBAL.MY_VAR!=ADMIN.MY_VAR THEN 
 RAISE_APPLICATION_ERROR(-20000,'YOU DONOT HAVE ACCESS TO THE DATA');
END IF;

 UPDATE ACCOUNT SET BALANCE = BALANCE +  MONTHS_BETWEEN(TO_DATE(SYSDATE,'DD-MM-YY'),TO_DATE(LAST_UPDATE,'DD-MM-YY') )*SALARY + BONUS ;
 UPDATE ACCOUNT SET LAST_UPDATE = SYSDATE;

END UPDATE_ACCOUNT;
/
SHOW ERRORS;


CREATE OR REPLACE PROCEDURE INCREMENT_SALARY (PEID EMPLOYEE.EMPLOYEE_ID%TYPE,AMOUNT ACCOUNT.SALARY%TYPE) IS

BEGIN
IF GLOBAL.MY_VAR!=ADMIN.MY_VAR THEN 
 RAISE_APPLICATION_ERROR(-20000,'YOU DONOT HAVE ACCESS TO THE DATA');
END IF;


UPDATE ACCOUNT SET SALARY = SALARY + AMOUNT WHERE EMPLOYEE_ID= PEID;

END INCREMENT_SALARY;
/
SHOW ERRORS;


CREATE OR REPLACE PROCEDURE DED_WITHD(PEID EMPLOYEE.EMPLOYEE_ID%TYPE, AMOUNT ACCOUNT.SALARY%TYPE)  IS



BEGIN
IF GLOBAL.MY_VAR!=ADMIN.MY_VAR THEN 
 RAISE_APPLICATION_ERROR(-20000,'YOU DONOT HAVE ACCESS TO THE DATA');
END IF;

UPDATE ACCOUNT SET WITHDRAW = WITHDRAW + AMOUNT WHERE EMPLOYEE_ID = PEID;

END DED_WITHD;
/
SHOW ERRORS;




